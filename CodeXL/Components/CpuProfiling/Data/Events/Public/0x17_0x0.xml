<cpu_events>

<!--
    AMD Family 17h Microarchitecture performance monitor events (internal)

    Processor Programming Reference (PPR) for AMD Family 17h Models 00h-0Fh Processors
    Rev 1.14 - 15 Apr 2017
    Copyright (c) 2017 Advanced Micro Devices, Inc.

    Date: Apr 18, 2017

    EventSelect[7:5] are used internally to encode the TLM (Top Level Module)
    that controls the performance counter.

        Bits   Definition
        ====   ==========
        000b      FP
        001b      LS
        010b      DC
        011b      L2
        100b      IC (BP)
        101b      DE
        110b      EX
        111b      Reserved.
-->

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; FP
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

<source unit="FP">

<event name="FPU Pipe Assignment" abbreviation="FPU ops" value="0">
	<mask value="0" name="Total0: Total number uOps assigned to Pipe 0" />
    <mask value="1" name="Total1: Total number uOps assigned to Pipe 1" />
    <mask value="2" name="Total2: Total number uOps assigned to Pipe 2" />
    <mask value="3" name="Total3: Total number uOps assigned to Pipe 3" />
    <mask value="4" name="Dual0: Total number multi-pipe uOps assigned to Pipe 0" />
    <mask value="5" name="Dual1: Total number multi-pipe uOps assigned to Pipe 1" />
    <mask value="6" name="Dual2: Total number multi-pipe uOps assigned to Pipe 2" />
    <mask value="7" name="Dual3: Total number multi-pipe uOps assigned to Pipe 3" />
	<op_name name="op" value="DISPATCHED_FPU_OPS" />
	<description>The number of operations (uOps) and dual-pipe uOps dispatched to each of the 4 FPU execution pipelines. This event reflects how busy the FPU pipelines are and may be used for workload characterization. This includes all operations performed by x87, MMX, and SSE instructions, including moves. Each increment represents a one-cycle dispatch event. This event is a speculative event. See PMCx0CB. Since this event includes non-numeric operations it is not suitable for measuring MFLOPS.</description>
</event>

<event name="FP Scheduler Empty" abbreviation="Cycles FPU emtpy" value="1" >
	<op_name name="op" value="CYCLES_FPU_EMPTY" />
	<description>This is a speculative event. The number of cycles in which the FPU scheduler is empty. Note that some Ops like FP loads bypass the scheduler; see the FP MAS for the full list of â€œno pipe" Ops that bypass the scheduler. Invert this (MSRC001_0200[Inv] == 1) to count cycles in which at least one FPU operation is present in the FPU.</description>
</event>

<event name="Retired x87 Floating Point Operations" abbreviation="Ret x87 FP ops" value="2" >
    <mask value="0" name="Add/subtract Ops" />
    <mask value="1" name="Multiply Ops" />
    <mask value="2" name="Divide and square root Ops" />
	<op_name name="op" value="RETIRED_FLOATING_POINT_OPERATIONS" />
	<description>The number of x87 floating-point Ops that have retired. The number of events logged per cycle can vary from 0 to 8.</description>
</event>

<event name="Retired SSE/AVX Operations" abbreviation="Retired SSE Ops" value="3">
	<mask value="0" name="Single-precision add/subtract FLOPS" />
	<mask value="1" name="Single-precision multiply FLOPS" />
	<mask value="2" name="Single-precision divide/square root FLOPS" />
	<mask value="4" name="Double precision add/subtract FLOPS" />
	<mask value="5" name="Double precision multiply FLOPS" />
	<mask value="6" name="Double precision divide/square root FLOPS" />
    <mask value="7" name="Double precision multiply-add FLOPS" />
	<op_name name="op" value="RETIRED_SSE_FLOPS" />
	<description>This is a retire-based event. The number of retired SSE/AVX FLOPS. The number of events logged per cycle can vary from 0 to 64. This event can count above 15.</description>
</event>

<event name="Number of Move Elimination and Scalar Op Optimization" abbreviation="Move elim Scalar op opt" value="4">
	<mask value="0" name="Number of SSE Move Ops" />
	<mask value="1" name="Number of SSE Move Ops eliminated" />
	<mask value="2" name="Number of Ops that are candidates for optimization" />
	<mask value="3" name="Number of Scalar Ops optimized" />
	<op_name name="op" value="RETIRED_SSE_MOVE_OPS" />
	<description>This is a dispatch based speculative event, and is useful for measuring the effectiveness of the Move elimination and Scalar code optimization schemes.</description>
</event>

<event name="Retired Serializing Ops" abbreviation="Ret serializing ops" value="5" >
	<mask value="0" name="SSE bottom-executing uOps retired" />
	<mask value="1" name="SSE control word mispredict traps due to mispredictions in RC, FTZ or DAZ, or changes in mask bits" />
	<mask value="2" name="x87 bottom-executing uOps retired" />
	<mask value="3" name="x87 control word mispredict traps due to mispredictions in RC or PC, or changes in mask bits" />
	<op_name name="op" value="RETIRED_SERIALIZING_OPS" />
	<description>The number of serializing Ops retired.</description>
</event>

</source>

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; LS
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

<source unit="LS">

<event name="Locks" abbreviation="Locks" value="25" >
	<mask value="0" name="BusLock" />
	<mask value="1" name="NonSpecLock" />
	<mask value="2" name="SpecLock" />
	<mask value="3" name="SpecLockMapCommit" />
	<op_name name="op" value="LS_LOCKS" />
	<description>Locks.</description>
</event>

<event name="LS Dispatch" abbreviation="LS dispatch" value="29" >
	<mask value="0" name="Loads" />
	<mask value="1" name="Stores" />
	<mask value="2" name="Load-op-Stores" />
	<op_name name="op" value="LS_DISPATCH" />
	<description>Counts the number of operations dispatched to the LS unit.</description>
</event>

<event name="Store to Load Forward" abbreviation="Store to Load Fwd" value="35" >
	<op_name name="op" value="STORE_TO_LOAD_FORWARD" />
	<description>Number of STLF hits.</description>
</event>

<event name="Cycles not in Halt" abbreviation="Not halted cycle" value="76" >
	<op_name name="op" value="CYCLES_NOT_IN_HALT" />
	<description>Cycles not in Halt.</description>
</event>

</source>

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; DC
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

<source unit="DC">

<event name="Data Cache Accesses" abbreviation="DC accesses" value="40" >
	<op_name name="op" value="DATA_CACHE_ACCESSES" />
	<description>The number of accesses to the data cache for load and store references. This may include certain microcode scratchpad accesses, although these are generally rare. Each increment represents an eight-byte access, although the instruction may only be accessing a portion of that. This event is a speculative event.</description>
</event>

<event name="MAB Allocation by Pipe" abbreviation="MAB Alloc" value="41" >
    <mask value="0" name="DataPipe" />
    <mask value="1" name="StPipe" />
    <mask value="2" name="TlbPipeLate" />
    <mask value="3" name="HwPf" />
    <mask value="4" name="TlbPipeEarly" />
	<op_name name="op" value="DATA_CACHE_MISSES" />
	<description>MAB allocation by pipe.</description>
</event>

<event name="L1 DTLB Miss" abbreviation="DTLB L1M" value="45" >
    <mask value="0" name="Tlb Reload 4K L2 Hit" />
    <mask value="1" name="Tlb Reload 32K L2 Hit" />
    <mask value="2" name="Tlb Reload 2M L2 Hit" />
    <mask value="3" name="Tlb Reload 1G L2 Hit" />
    <mask value="4" name="Tlb Reload 4K L2 Miss" />
    <mask value="5" name="Tlb Reload 32K L2 Miss" />
    <mask value="6" name="Tlb Reload 2M L2 Miss" />
    <mask value="7" name="Tlb Reload 1G L2 Miss" />
    <op_name name="op" value="DTLB_L1M" />
	<description>L1 DTLB miss.</description>
</event>

<event name="Tablewalker allocation" abbreviation="Tablewalker alloc" value="46" >
	<mask value="0" name="Dside 0" />
	<mask value="1" name="Dside 1" />
	<mask value="2" name="Iside 0" />
	<mask value="3" name="Iside 1" />
	<op_name name="op" value="TABLEWALKER_ALLOC" />
	<description>Tablewalker allocation.</description>
</event>

<event name="Misaligned loads" abbreviation="Misalign access" value="47" >
	<op_name name="op" value="MISALIGNED_LOAD" />
	<description>Misaligned loads (accesses).</description>
</event>

<event name="Prefetch Instructions Dispatched" abbreviation="Prefetch inst" value="4b" >
	<mask value="0" name="LoadPrefetchW: Prefetch, PrefetchT0/T1/T2" />
	<mask value="1" name="StorePrefetchW" />
	<mask value="2" name="PrefetchNTA" />
	<op_name name="op" value="PREFETCH_INSTRUCTIONS_DISPATCHED" />
	<description>Software prefetch instructions dispatched.</description>
</event>

<event name="Ineffective Software Prefetches" abbreviation="Ineffective SW prefetch" value="52" >
	<mask value="0" name="DataPipeSwPfDcHit" />
	<mask value="1" name="MabMchCnt" />
	<op_name name="op" value="INEFFECTIVE_SOFTWARE_PREFETCHES" />
	<description>The number of software prefetches that did not fetch data outside of the processor core.</description>
</event>

</source>

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; L2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

<source unit="L2">

<event name="Requests to L2 Group1" abbreviation="Req to L2 gr1" value="60" >
	<mask value="0" name="Other Requests, events covered by PMCx061" />
	<mask value="1" name="L2 Hardware Prefetch" />
	<mask value="2" name="Prefetch L2" />
	<mask value="3" name="Change To X" />
	<mask value="4" name="Cacheable Ic Read" />
	<mask value="5" name="Ls Rd Blk C S" />
	<mask value="6" name="Rd Blk X" />
    <mask value="7" name="Rd Blk L" />
	<op_name name="op" value="REQUEST_TO_L2_GROUP_1" />
	<description>Requests to L2 Group1.</description>
</event>

<event name="Requests to L2 Group2" abbreviation="Req to L2 gr2" value="61" >
	<mask value="0" name="Bus Locks Responses" />
	<mask value="1" name="Bus Locks Originator" />
	<mask value="2" name="Smc Inval" />
	<mask value="3" name="Ic Rd Sized NC" />
	<mask value="4" name="Ic Rd Sized" />
	<mask value="5" name="Ls Rd Sized NC" />
	<mask value="6" name="Ls Rd Sized" />
    <mask value="7" name="All Group 1 commands not in unit0" />
	<op_name name="op" value="REQUEST_TO_L2_GROUP_2" />
	<description>Multi-events in that LS and IF requests can be received simultaneous.</description>
</event>

<event name="L2 Latency" abbreviation="L2 latency" value="62" >
    <mask value="0" name="L2 Cycles Waiting On Fills" />
	<op_name name="op" value="L2_LATENCY" />
	<description>Total cycles spent waiting for L2 fills to complete from L3 or memory, divided by four. This may be used to calculate average latency by multiplying this count by four and then dividing by the total number of L2 fills (event PMCx060 with unit mask FEh). Event counts are for both threads. To calculate average latency, the number of fills from both threads must be used.</description>
</event>

<event name="LS to L2 WBC requests" abbreviation="WBC req" value="63" >
	<mask value="0" name="Cache Line Zero" />
	<mask value="1" name="Local IC Clear" />
	<mask value="2" name="Zero Byte Store" />
	<mask value="3" name="I Line Flush" />
	<mask value="4" name="Cache Line Flush" />
	<mask value="5" name="Wcb Close" />
	<mask value="6" name="Wcb Write" />
	<op_name name="op" value="LS_TO_L2_WBC_REQUESTS" />
	<description>LS to L2 WBC requests.</description>
</event>

<event name="Core to L2 Cacheable Request Access Status" abbreviation="L2 cache res stat" value="64" >
	<mask value="0" name="IC Fill Miss" />
	<mask value="1" name="IC Fill Hit Shared" />
	<mask value="2" name="IC Fill Hit Exclusive Stale" />
	<mask value="3" name="LS Read Block C S L X Change to X Miss" />
	<mask value="4" name="LsRdBlkX/ChgToX Hit X" />
	<mask value="5" name="LsRdBlkL Hit Shared" />
	<mask value="6" name="LS Read Block L Hit X" />
    <mask value="7" name="LS ReadBlock C/S Hit" />
	<op_name name="op" value="L2_CACHEABLE_REQUEST_STATUS" />
	<description>This event does not count accesses to the L2 cache by the L2 prefetcher, but it does count accesses by the L1 prefetcher.</description>
</event>

<event name="Cycles with fill pending from L2" abbreviation="L2 fill pending" value="6d" >
    <mask value="0" name="L2 Fill Busy" />
	<op_name name="op" value="L2_FILL_PENDING" />
	<description>Total cycles spent with one or more fill requests in flight from L2.</description>
</event>

</source>

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; IC and BP
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

<source unit="IC">

<event name="32 Byte Instruction Cache Fetches" abbreviation="32B IC fetches" value="80" >
	<op_name name="op" value="INSTRUCTION_CACHE_FETCHES_32B" />
    <description>The number of 32B fetch windows transferred from IC pipe to DE instruction decoder (includes non-cacheable and cacheable fill responses).</description>
</event>

<event name="32 Byte Instruction Cache Misses" abbreviation="32B IC misses" value="81" >
	<op_name name="op" value="INSTRUCTION_CACHE_MISSES_32B" />
    <description>The number of 32B fetch windows tried to read the L1 IC and missed in the full tag.</description>
</event>

<event name="Instruction Cache Refills from L2" abbreviation="IC refills from L2" value="82" >
	<op_name name="op" value="INSTRUCTION_CACHE_REFILLS_FROM_L2" />
    <description>The number of 64 byte instruction cache line was fulfilled from the L2 cache.</description>
</event>

<event name="Instruction Cache Refills from System" abbreviation="IC refills from sys" value="83" >
	<op_name name="op" value="INSTRUCTION_CACHE_REFILLS_FROM_SYSTEM" />
    <description>The number of 64 byte instruction cache line fulfilled from system memory or another cache.</description>
</event>

<event name="L1 ITLB Miss, L2 ITLB Hit" abbreviation="ITLB L1M L2H" value="84" >
	<op_name name="op" value="L1_ITLB_MISS_L2_ITLB_HIT" />
    <description>The number of instruction fetches that miss in the L1 ITLB but hit in the L2 ITLB.</description>
</event>

<event name="L1 ITLB Miss, L2 ITLB Miss" abbreviation="ITLB miss" value="85" >
	<mask value="0" name="Instruction fetches to a 4KB page" />
	<mask value="1" name="Instruction fetches to a 2MB page" />
    <mask value="2" name="Instruction fetches to a 1GB page" />
	<op_name name="op" value="ITLB_MISS" />
    <description>The number of instruction fetches that miss in both the L1 and L2 TLBs.</description>
</event>

<event name="Pipeline Restart Due to Instruction Stream Probe" abbreviation="Restart by inst probe" value="86" >
	<op_name name="op" value="PIPELINE_RESTART_DUE_TO_VARIOUS_EVENTS" />
    <description>The number of pipeline restarts caused by invalidating probes that hit on the instruction stream currently being executed. This would happen if the active instruction stream was being modified by another processor in an MP system - typically a highly unlikely event.</description>
</event>

<event name="Instruction Pipe Stall" abbreviation="Inst pipe stall" value="87" >
    <mask value="0" name="Due to back-pressure" />
    <mask value="1" name="Due to DQ empty" />
    <mask value="2" name="For any reason (nothing valid in pipe ICM1)" />
	<op_name name="op" value="INSTRUCTION_PIPE_STALL" />
    <description>Instruction pipe stall.</description>
</event>

<event name="L1 BTB Correction" abbreviation="L1 BTB correct" value="8a" >
	<op_name name="op" value="L1_BTB_CORRECTION" />
    <description>L1 BTB correction.</description>
</event>

<event name="L2 BTB Correction" abbreviation="L2 BTB correct" value="8b" >
	<op_name name="op" value="L2_BTB_CORRECTION" />
    <description>L2 BTB correction.</description>
</event>

<event name="Instruction Cache Lines Invalidated" abbreviation="IC lines invalid" value="8c" >
	<mask value="0" name="IC line invalidated due to overwriting fill response" />
	<mask value="1" name="IC line invalidated due to L2 invalidating probe" />
	<op_name name="op" value="INSTRUCTION_CACHE_LINES_INVALIDATED:" />
    <description>The number of instruction cache lines invalidated. A non-SMC event is CMC (cross modifying code),  either from the other thread of the core or another core.</description>
</event>

<event name="ITLB Reloads" abbreviation="ITLB reloads" value="99" >
	<op_name name="op" value="ITLB_RELOADS" />
    <description>The number of ITLB reload requests.</description>
</event>

<event name="OC Mode Switch" abbreviation="OC mode swch" value="28a" >
	<mask value="0" name="IC to OC mode switch" />
	<mask value="1" name="OC to IC mode switch" />
	<op_name name="op" value="OC_MODE_SWITCH" />
    <description>OC mode switch.</description>
</event>

</source>

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; DE
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

<source unit="DE">

<event name="Dynamic Tokens Dispatch Stall Cycles 0" abbreviation="Disp token stalls 0" value="af" >
	<mask value="0" name="ALSQ 1 Tokens unavailable"/>
	<mask value="1" name="ALSQ 2 Tokens unavailable"/>
    <mask value="2" name="ALSQ 3 Tokens unavailable"/>
    <mask value="3" name="ALSQ 0 or 3 Tokens unavailable"/>
    <mask value="4" name="ALU tokens total unavailable"/>
    <mask value="5" name="AGSQ Tokens unavailable"/>
    <mask value="6" name="RETIRE Tokens unavailable"/>
	<op_name name="op" value="DISPATCH_STALL_CYCLES_0" />
    <description>Cycles where a dispatch group is valid but does not get dispatched due to a Token Stall.</description>
</event>

</source>

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; EX
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

<source unit="EX">

<event name="Retired Instructions" abbreviation="Ret inst" value="c0" >
	<op_name name="op" value="RETIRED_INSTRUCTIONS" />
    <description>The number of instructions retired.</description>
</event>

<event name="Retired uops" abbreviation="Ret uops" value="c1" >
	<op_name name="op" value="RETIRED_UOPS" />
    <description>The number of uOps retired. This includes all processor activity (instructions, exceptions, interrupts, microcode assists, etc.). The number of events logged per cycle can vary from 0 to 4.</description>
</event>

<event name="Retired Branch Instructions" abbreviation="Ret branch" value="c2" >
	<op_name name="op" value="RETIRED_BRANCH_INSTRUCTIONS" />
    <description>The number of branch instructions retired. This includes all types of architectural control flow changes, including exceptions and interrupts.</description>
</event>

<event name="Retired Branch Instructions Mispredicted" abbreviation="Ret misp branch" value="c3" >
	<op_name name="op" value="RETIRED_MISPREDICTED_BRANCH_INSTRUCTION" />
    <description>The number of branch instructions retired, of any type, that were not correctly predicted in either target or direction. This includes those for which prediction is not attempted (far control transfers, exceptions and interrupts).</description>
</event>

<event name="Retired Taken Branch Instructions" abbreviation="Ret taken branch" value="c4" >
	<op_name name="op" value="RETIRED_TAKEN_BRANCH_INSTRUCTION" />
    <description>The number of taken branches that were retired. This includes all types of architectural control flow changes, including exceptions and interrupts.</description>
</event>

<event name="Retired Taken Branch Instructions Mispredicted" abbreviation="Ret taken branch misp" value="c5" >
	<op_name name="op" value="RETIRED_TAKEN_BRANCH_INSTRUCTION_MISPREDICTED" />
    <description>The number of retired taken branch instructions that were mispredicted.</description>
</event>

<event name="Retired Far Control Transfers" abbreviation="Ret far xfers" value="c6" >
	<op_name name="op" value="RETIRED_FAR_CONTROL_TRANSFERS" />
    <description>The number of far control transfers retired including far call/jump/return, IRET, SYSCALL and SYSRET, plus exceptions and interrupts. Far control transfers are not subject to branch prediction.</description>
</event>

<event name="Retired Branch Resyncs" abbreviation="Ret branch resyncs" value="c7" >
	<op_name name="op" value="RETIRED_BRANCH_RESYNCS" />
    <description>The number of resync branches. These reflect pipeline restarts due to certain microcode assists and events such as writes to the active instruction stream, among other things. Each occurrence reflects a restart penalty similar to a branch mispredict. This is relatively rare.</description>
</event>

<event name="Retired Near Returns" abbreviation="Ret near RET" value="c8" >
	<op_name name="op" value="RETIRED_NEAR_RETURNS" />
    <description>The number of near return instructions (RET or RET Iw) retired.</description>
</event>

<event name="Retired Near Returns Mispredicted" abbreviation="Ret near RET misp" value="c9" >
	<op_name name="op" value="RETIRED_NEAR_RETURNS_MISPREDICTED" />
    <description>The number of near returns retired that were not correctly predicted by the return address predictor. Each such mispredict incurs the same penalty as a mispredicted conditional branch instruction.</description>
</event>

<event name="Retired Indirect Branch Instructions Mispredicted" abbreviation="Ret ind branch instr mispredict" value="ca" >
	<op_name name="op" value="RETIRED_INDIRECT_BRANCH_INST_MISPREDICTED" />
    <description>Retired Indirect Branch Instructions Mispredicted.</description>
</event>

<event name="Retired MMX/FP Instructions" abbreviation="Ret MMX/FP inst" value="cb" >
	<mask value="0" name="x87 instructions"/>
	<mask value="1" name="MMX instructions"/>
    <mask value="2" name="SSE instructions (SSE, SSE2, SSE3, SSSE3, SSE4A, SSE41, SSE42, AVX)"/>
	<op_name name="op" value="RETIRED_MMX_FP_INSTRUCTION" />
    <description>The number of MMX, SSE or x87 instructions retired. The UnitMask allows the selection of the individual classes of instructions as given in the table. Each increment represents one complete instruction. Since this event includes non-numeric instructions it is not suitable for measuring MFLOPS.</description>
</event>

<event name="Retired Conditional Branch Instructions" abbreviation="Ret cond branch instr" value="d1" >
	<op_name name="op" value="RETIRED_CONDITIONAL_BRANCH_INSTRUCTION" />
    <description>Retired Conditional Branch Instructions.</description>
</event>

<event name="Retired Conditional Branch Instructions Mispredicted" abbreviation="Ret cond branch instr mispred" value="d2" >
	<op_name name="op" value="RETIRED_CONDITIONAL_BRANCH_INSTRUCTION_MISPREDICTED" />
    <description>Retired Conditional Branch Instructions Mispredicted.</description>
</event>

<event name="Div Cycles Busy count" abbreviation="Div busy" value="d3" >
	<op_name name="op" value="DIV_CYCLES_BUSY_COUNT" />
    <description>Div Cycles Busy count.</description>
</event>

<event name="Div Op Count" abbreviation="Div Op count" value="d4" >
	<op_name name="op" value="DIV_OP_COUNT" />
    <description>Div Op Count.</description>
</event>

<event name="Tagged IBS Ops" abbreviation="IBS ops tagged" value="1cf" >
    <mask value="0" name="Number of Ops tagged by IBS"/>
    <mask value="1" name="Number of Ops tagged by IBS that retired"/>
    <mask value="2" name="Number of times an op could not be tagged by IBS because of a previous tagged op that has not retired"/>
	<op_name name="op" value="TAGGED_IBS_OPS" />
    <description>Number of ops tagged by IBS.</description>
</event>

<event name="Retired Fused Branch Instructions" abbreviation="Ret fus brnch inst" value="1d0" >
	<op_name name="op" value="RETIRED_FUSED_BRANCH_INSTRUCTION" />
    <description>The number of fused retired branch instructions retired per cycle. The number of events logged per cycle can vary from 0 to 3.</description>
</event>

</source>

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; IBS
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

<source unit="IBS">

<event name="All IBS fetch samples" abbreviation="IBS fetch" value="f000" >
	<op_name name="op" value="IBS_FETCH_ALL" />
	<description>The number of all IBS fetch samples. This derived event counts the number of all IBS fetch samples that were collected including IBS-killed fetch samples.</description>
</event>

<event name="IBS fetch killed" abbreviation="IBS fetch killed" value="f001" >
	<op_name name="op" value="IBS_FETCH_KILLED" />
	<description>The number of IBS sampled fetches that were killed fetches. A fetch operation is killed if the fetch did not reach ITLB or IC access. The number of killed fetch samples is not generally useful for analysis and are filtered out in other derived IBS fetch events (except Event Select 0xF000 which counts all IBS fetch samples including IBS killed fetch samples.)</description>
</event>

<event name="IBS fetch attempted" abbreviation="IBS fetch attempt" value="f002" >
	<op_name name="op" value="IBS_FETCH_ATTEMPTED" />
	<description>The number of IBS sampled fetches that were not killed fetch attempts. This derived event measures the number of useful fetch attempts and does not include the number of IBS killed fetch samples. This event should be used to compute ratios such as the ratio of IBS fetch IC misses to attempted fetches. The number of attempted fetches should equal the sum of the number of completed fetches and the number of aborted fetches.</description>
</event>

<event name="IBS fetch completed" abbreviation="IBS fetch comp" value="f003" >
	<op_name name="op" value="IBS_FETCH_COMPLETED" />
	<description>The number of IBS sampled fetches that completed. A fetch is completed if the attempted fetch delivers instruction data to the instruction decoder. Although the instruction data was delivered, it may still not be used (e.g., the instruction data may have been on the "wrong path" of an incorrectly predicted branch.)</description>
</event>

<event name="IBS fetch aborted" abbreviation="IBS fetch abort" value="f004" >
	<op_name name="op" value="IBS_FETCH_ABORTED" />
	<description>The number of IBS sampled fetches that aborted. An attempted fetch is aborted if it did not complete and deliver instruction data to the decoder. An attempted fetch may abort at any point in the process of fetching instruction data. An abort may be due to a branch redirection as the result of a mispredicted branch. The number of IBS aborted fetch samples is a lower bound on the amount of unsuccessful, speculative fetch activity. It is a lower bound since the instruction data delivered by completed fetches may not be used.</description>
</event>

<event name="IBS ITLB hit" abbreviation="IBS L1 ITLB hit" value="f005" >
	<op_name name="op" value="IBS_FETCH_ITLB_HITS" />
	<description>The number of IBS attempted fetch samples where the fetch operation initially hit in the L1 ITLB (Instruction Translation Lookaside Buffer).</description>
</event>

<event name="IBS L1 ITLB misses (and L2 ITLB hits)" abbreviation="IBS ITLB L1M L2H" value="f006" >
	<op_name name="op" value="IBS_FETCH_L1_ITLB_MISSES_L2_ITLB_HITS" />
	<description>The number of IBS attempted fetch samples where the fetch operation initially missed in the L1 ITLB and hit in the L2 ITLB.</description>
</event>

<event name="IBS L1 L2 ITLB miss" abbreviation="IBS ITLB L1M L2M" value="f007" >
	<op_name name="op" value="IBS_FETCH_L1_ITLB_MISSES_L2_ITLB_MISSES" />
	<description>The number of IBS attempted fetch samples where the fetch operation initially missed in both the L1 ITLB and the L2 ITLB.</description>
</event>

<event name="IBS instruction cache misses" abbreviation="IBS IC miss" value="f008" >
	<op_name name="op" value="IBS_FETCH_ICACHE_MISSES" />
	<description>The number of IBS attempted fetch samples where the fetch operation initially missed in the IC (instruction cache).</description>
</event>

<event name="IBS instruction cache hit" abbreviation="IBS IC hit" value="f009" >
	<op_name name="op" value="IBS_FETCH_ICACHE_HITS" />
	<description>The number of IBS attempted fetch samples where the fetch operation initially hit in the IC.</description>
</event>

<event name="IBS 4K page translation" abbreviation="IBS 4K page" value="f00a" >
	<op_name name="op" value="IBS_FETCH_4K_PAGE" />
	<description>The number of IBS attempted fetch samples where the fetch operation produced a valid physical address (i.e., address translation completed successfully) and used a 4-KByte page entry in the L1 ITLB.</description>
</event>

<event name="IBS 2M page translation" abbreviation="IBS 2M page" value="f00b" >
	<op_name name="op" value="IBS_FETCH_2M_PAGE" />
	<description>The number of IBS attempted fetch samples where the fetch operation produced a valid physical address (i.e., address translation completed successfully) and used a 2-MByte page entry in the L1 ITLB.</description>
</event>

<event name="IBS fetch latency" abbreviation="IBS fetch lat" value="f00e" >
	<op_name name="op" value="IBS_FETCH_LATENCY" />
	<description>The total latency of all IBS attempted fetch samples. Divide the total IBS fetch latency by the number of IBS attempted fetch samples to obtain the average latency of the attempted fetches that were sampled.</description>
</event>

<event name="IBS fetch L2 cache miss" abbreviation="IBS fetch l2c miss" value="f00f" >
	<op_name name="op" value="IBS_FETCH_L2C_MISS" />
	<description>The instruction fetch missed in the L2 Cache.</description>
</event>

<event name="IBS ITLB refill latency" abbreviation="IBS itlb refill lat" value="f010" >
	<op_name name="op" value="IBS_ITLB_REFILL_LAT" />
	<description>The number of cycles when the fetch engine is stalled for an ITLB reload for the sampled fetch. If there is no reload, the latency will be 0.</description>
</event>

<event name="All IBS op samples" abbreviation="IBS all ops" value="f100" >
	<op_name name="op" value="IBS_OP_ALL" />
	<description>The number of all IBS op samples that were collected. These op samples may be branch ops, resync ops, ops that perform load/store operations, or undifferentiated ops (e.g., those ops that perform arithmetic operations, logical operations, etc.). IBS collects data for retired ops. No data is collected for ops that are aborted due to pipeline flushes, etc. Thus, all sampled ops are architecturally significant and contribute to the successful forward progress of executing programs.</description>
</event>

<event name="IBS tag-to-retire cycles" abbreviation="IBS tag-to-ret" value="f101" >
	<op_name name="op" value="IBS_OP_TAG_TO_RETIRE" />
	<description>The total number of tag-to-retire cycles across all IBS op samples. The tag-to-retire time of an op is the number of cycles from when the op was tagged (selected for sampling) to when the op retired.</description>
</event>

<event name="IBS completion-to-retire cycles" abbreviation="IBS comp-to-ret" value="f102" >
	<op_name name="op" value="IBS_OP_COMP_TO_RET" />
	<description>The total number of completion-to-retire cycles across all IBS op samples. The completion-to-retire time of an op is the number of cycles from when the op completed to when the op retired.</description>
</event>

<event name="IBS branch op" abbreviation="IBS BR" value="f103" >
	<op_name name="op" value="IBS_OP_BRANCH_RETIRED" />
	<description>The number of IBS retired branch op samples. A branch operation is a change in program control flow and includes unconditional and conditional branches, subroutine calls and subroutine returns. Branch ops are used to implement AMD64 branch semantics.</description>
</event>

<event name="IBS mispredicted branch op" abbreviation="IBS misp BR" value="f104" >
	<op_name name="op" value="IBS_OP_MISPREDICTED_BRANCH" />
	<description>The number of IBS samples for retired branch operations that were mispredicted. This event should be used to compute the ratio of mispredicted branch operations to all branch operations.</description>
</event>

<event name="IBS taken branch op" abbreviation="IBS taken BR" value="f105" >
	<op_name name="op" value="IBS_OP_TAKEN_BRANCH" />
	<description>The number of IBS samples for retired branch operations that were taken branches.</description>
</event>

<event name="IBS mispredicted taken branch op" abbreviation="IBS misp taken BR" value="f106" >
	<op_name name="op" value="IBS_OP_MISPREDICTED_BRANCH_TAKEN" />
	<description>The number of IBS samples for retired branch operations that were mispredicted taken branches.</description>
</event>

<event name="IBS return op" abbreviation="IBS RET" value="f107" >
	<op_name name="op" value="IBS_OP_RETURNS" />
	<description>The number of IBS retired branch op samples where the operation was a subroutine return. These samples are a subset of all IBS retired branch op samples.</description>
</event>

<event name="IBS mispredicted return op" abbreviation="IBS misp RET" value="f108" >
	<op_name name="op" value="IBS_OP_MISPREDICTED_RETURNS" />
	<description>The number of IBS retired branch op samples where the operation was a mispredicted subroutine return. This event should be used to compute the ratio of mispredicted returns to all subroutine returns.</description>
</event>

<event name="IBS resync op" abbreviation="IBS resync" value="f109" >
	<op_name name="op" value="IBS_OP_RESYNC" />
	<description>The number of IBS resync op samples. A resync op is only found in certain microcoded AMD64 instructions and causes a complete pipeline flush.</description>
</event>

<event name="IBS all load store ops" abbreviation="IBS load/store" value="f200" >
	<op_name name="op" value="IBS_OP_ALL_LOAD_STORE" />
	<description>The number of IBS op samples for ops that perform either a load and/or store operation. An AMD64 instruction may be translated into one ("single fastpath"), two ("double fastpath"), or several ("vector path") ops. Each op may perform a load operation, a store operation or both a load and store operation (each to the same address). Some op samples attributed to an AMD64 instruction may perform a load/store operation while other op samples attributed to the same instruction may not. Further, some branch instructions perform load/store operations. Thus, a mix of op sample types may be attributed to a single AMD64 instruction depending upon the ops that are issued from the AMD64 instruction and the op types.</description>
</event>

<event name="IBS load ops" abbreviation="IBS load" value="f201" >
	<op_name name="op" value="IBS_OP_LOAD" />
	<description>The number of IBS op samples for ops that perform a load operation.</description>
</event>

<event name="IBS store ops" abbreviation="IBS store" value="f202" >
	<op_name name="op" value="IBS_OP_STORE" />
	<description>The number of IBS op samples for ops that perform a store operation.</description>
</event>

<event name="IBS L1 DTLB hit" abbreviation="IBS L1 DTLB hit" value="f203" >
	<op_name name="op" value="IBS_OP_L1_DTLB_HITS" />
	<description>The number of IBS op samples where either a load or store operation initially hit in the L1 DTLB (data translation lookaside buffer).</description>
</event>

<event name="IBS L1 DTLB misses L2 hits" abbreviation="IBS DTLB L1M L2H" value="f204" >
	<op_name name="op" value="IBS_OP_L1_DTLB_MISS_L2_DTLB_HIT" />
	<description>The number of IBS op samples where either a load or store operation initially missed in the L1 DTLB and hit in the L2 DTLB.</description>
</event>

<event name="IBS L1 and L2 DTLB misses" abbreviation="IBS DTLB L1M L2M" value="f205" >
	<op_name name="op" value="IBS_OP_L1_L2_DTLB_MISS" />
	<description>The number of IBS op samples where either a load or store operation initially missed in both the L1 DTLB and the L2 DTLB.</description>
</event>

<event name="IBS data cache misses" abbreviation="IBS DC miss" value="f206" >
	<op_name name="op" value="IBS_OP_DATA_CACHE_MISS" />
	<description>The number of IBS op samples where either a load or store operation initially missed in the data cache (DC).</description>
</event>

<event name="IBS data cache hits" abbreviation="IBS DC hit" value="f207" >
	<op_name name="op" value="IBS_OP_DATA_HITS" />
	<description>The number of IBS op samples where either a load or store operation initially hit in the data cache (DC).</description>
</event>

<event name="IBS misaligned data access" abbreviation="IBS misalign acc" value="f208" >
	<op_name name="op" value="IBS_OP_MISALIGNED_DATA_ACC" />
	<description>The number of IBS op samples where either a load or store operation caused a misaligned access (i.e., the load or store operation crossed a 128-bit boundary).</description>
</event>

<event name="IBS bank conflict on load op" abbreviation="IBS bank conf load" value="f209" >
	<op_name name="op" value="IBS_OP_BANK_CONF_LOAD" />
	<description>The number of IBS op samples where either a load or store operation caused a bank conflict with a load operation.</description>
</event>

<event name="IBS bank conflict on store op" abbreviation="IBS bank conf store" value="f20a" >
	<op_name name="op" value="IBS_OP_BANK_CONF_STORE" />
	<description>The number of IBS op samples where either a load or store operation caused a bank conflict with a store operation.</description>
</event>

<event name="IBS store-to-load forwarded" abbreviation="IBS forwarded" value="f20b" >
	<op_name name="op" value="IBS_OP_FORWARD" />
	<description>The number of IBS op samples where data for a load operation was forwarded from a store operation.</description>
</event>

<event name="IBS store-to-load cancelled" abbreviation="IBS STLF cancelled" value="f20c" >
	<op_name name="op" value="IBS_OP_CANCELLED" />
	<description>The number of IBS op samples where data forwarding to a load operation from a store was cancelled.</description>
</event>

<event name="IBS UC memory access" abbreviation="IBS UC mem acc" value="f20d" >
	<op_name name="op" value="IBS_OP_DCUC_MEM_ACC" />
	<description>The number of IBS op samples where a load or store operation accessed uncacheable (UC) memory.</description>
</event>

<event name="IBS WC memory access" abbreviation="IBS WC mem acc" value="f20e" >
	<op_name name="op" value="IBS_OP_DCWC_MEM_ACC" />
	<description>The number of IBS op samples where a load or store operation accessed write combining (WC) memory.</description>
</event>

<event name="IBS locked operation" abbreviation="IBS locked op" value="f20f" >
	<op_name name="op" value="IBS_OP_LOCKED" />
	<description>The number of IBS op samples where a load or store operation was a locked operation.</description>
</event>

<event name="IBS MAB hit" abbreviation="IBS MAB hit" value="f210" >
	<op_name name="op" value="IBS_OP_MAB_HIT" />
	<description>The number of IBS op samples where a load or store operation hit an already allocated entry in the Miss Address Buffer (MAB).</description>
</event>

<event name="IBS L1 DTLB 4K page" abbreviation="IBS L1 DTLB 4K" value="f211" >
	<op_name name="op" value="IBS_OP_L1_DTLB_4K" />
	<description>The number of IBS op samples where a load or store operation produced a valid linear (virtual) address and a 4-KByte page entry in the L1 DTLB was used for address translation.</description>
</event>

<event name="IBS L1 DTLB 2M page" abbreviation="IBS L1 DTLB 2M" value="f212" >
	<op_name name="op" value="IBS_OP_L1_DTLB_2M" />
	<description>The number of IBS op samples where a load or store operation produced a valid linear (virtual) address and a 2-MByte page entry in the L1 DTLB was used for address translation.</description>
</event>

<event name="IBS L1 DTLB 1G page" abbreviation="IBS L1 DTLB 1G" value="f213" >
	<op_name name="op" value="IBS_OP_L1_DTLB_1G" />
	<description>The number of IBS op samples where a load or store operation produced a valid linear (virtual) address and a 1-GByte page entry in the L1 DTLB was used for address translation.</description>
</event>

<event name="IBS L2 DTLB 4K page" abbreviation="IBS L2 DTLB 4K" value="f215" >
	<op_name name="op" value="IBS_OP_L2_DTLB_4K" />
	<description>The number of IBS op samples where a load or store operation produced a valid linear (virtual) address, hit the L2 DTLB, and used a 4 KByte page entry for address translation.</description>
</event>

<event name="IBS L2 DTLB 2M page" abbreviation="IBS L2 DTLB 2M" value="f216" >
	<op_name name="op" value="IBS_OP_L2_DTLB_2M" />
	<description>The number of IBS op samples where a load or store operation produced a valid linear (virtual) address, hit the L2 DTLB, and used a 2-MByte page entry for address translation.</description>
</event>

<event name="IBS L2 DTLB 1G page" abbreviation="IBS L2 DTLB 1G" value="f217" >
	<op_name name="op" value="IBS_OP_L2_DTLB_1G" />
	<description>The number of IBS op samples where a load or store operation produced a valid linear (virtual) address, hit the L2 DTLB, and used a 1-GByte page entry for address translation.</description>
</event>

<event name="IBS data cache miss load latency" abbreviation="IBS DC miss lat" value="f219" >
	<op_name name="op" value="IBS_OP_DC_LOAD_LAT" />
	<description>The total DC miss load latency (in processor cycles) across all IBS op samples that performed a load operation and missed in the data cache. The miss latency is the number of clock cycles from when the data cache miss was detected to when data was delivered to the core. Divide the total DC miss load latency by the number of data cache misses to obtain the average DC miss load latency.</description>
</event>

<event name="IBS load resync" abbreviation="IBS load resync" value="f21c" >
	<op_name name="op" value="IBS_LS_DC_LD_RESYNC" />
	<description>Load Resync.</description>
</event>

<event name="IBS Northbridge local" abbreviation="IBS NB local" value="f240" >
	<op_name name="op" value="IBS_OP_NB_LOCAL_ONLY" />
	<description>The number of IBS op samples where a load operation was serviced from the local processor. Northbridge IBS data is only valid for load operations that miss in both the L1 data cache and the L2 data cache. If a load operation crosses a cache line boundary, then the IBS data reflects the access to the lower cache line.</description>
</event>

<event name="IBS Northbridge remote" abbreviation="IBS NB remote" value="f241" >
	<op_name name="op" value="IBS_OP_NB_REMOTE_ONLY" />
	<description>The number of IBS op samples where a load operation was serviced from a remote processor.</description>
</event>

<event name="IBS Northbridge local L3" abbreviation="IBS NB local L3" value="f242" >
	<op_name name="op" value="IBS_OP_NB_LOCAL_L3" />
	<description>The number of IBS op samples where a load operation was serviced by the local L3 cache.</description>
</event>

<event name="IBS Northbridge local core L1 or L2 cache" abbreviation="IBS NB local cache" value="f243" >
	<op_name name="op" value="IBS_OP_NB_LOCAL_CACHE" />
	<description>The number of IBS op samples where a load operation was serviced by a cache (L1 data cache or L2 cache) belonging to a local core which is a sibling of the core making the memory request.</description>
</event>

<event name="IBS Northbridge local core L1, L2, L3 cache" abbreviation="IBS NB remote cache" value="f244" >
	<op_name name="op" value="IBS_OP_NB_REMOTE_CACHE" />
	<description>The number of IBS op samples where a load operation was serviced by a remote L1 data cache, L2 cache or L3 cache after traversing one or more coherent HyperTransport links.</description>
</event>

<event name="IBS Northbridge local DRAM" abbreviation="IBS NB local DRAM" value="f245" >
	<op_name name="op" value="IBS_OP_NB_LOCAL_DRAM" />
	<description>The number of IBS op samples where a load operation was serviced by local system memory (local DRAM via the memory controller).</description>
</event>

<event name="IBS Northbridge remote DRAM" abbreviation="IBS NB remote DRAM" value="f246" >
	<op_name name="op" value="IBS_OP_NB_REMOTE_DRAM" />
	<description>The number of IBS op samples where a load operation was serviced by remote system memory (after traversing one or more coherent HyperTransport links and through a remote memory controller).</description>
</event>

<event name="IBS Northbridge local APIC MMIO Config PCI" abbreviation="IBS NB local other" value="f247" >
	<op_name name="op" value="IBS_OP_NB_LOCAL_OTHER" />
	<description>The number of IBS op samples where a load operation was serviced from local MMIO, configuration or PCI space, or from the local APIC.</description>
</event>

<event name="IBS Northbridge remote APIC MMIO Config PCI" abbreviation="IBS NB remote other" value="f248" >
	<op_name name="op" value="IBS_OP_NB_REMOTE_OTHER" />
	<description>The number of IBS op samples where a load operation was serviced from remote MMIO, configuration or PCI space.</description>
</event>

<event name="IBS Northbridge cache modified state" abbreviation="IBS NB cache Modified" value="f249" >
	<op_name name="op" value="IBS_OP_NB_CACHE_MODIFIED" />
	<description>The number of IBS op samples where a load operation was serviced from local or remote cache, and the cache hit state was the Modified (M) state.</description>
</event>

<event name="IBS Northbridge cache owned state" abbreviation="IBS NB cache Owned" value="f24a" >
	<op_name name="op" value="IBS_OP_NB_CACHE_OWNED" />
	<description>The number of IBS op samples where a load operation was serviced from local or remote cache, and the cache hit state was the Owned (O) state.</description>
</event>

<event name="IBS Northbridge local cache latency" abbreviation="IBS NB local lat" value="f24b" >
	<op_name name="op" value="IBS_OP_NB_LOCAL_CACHE_LAT" />
	<description>The total data cache miss latency (in processor cycles) for load operations that were serviced by the local processor.</description>
</event>

<event name="IBS Northbridge remote cache latency" abbreviation="IBS NB remote lat" value="f24c" >
	<op_name name="op" value="IBS_OP_NB_REMOTE_CACHE_LAT" />
	<description>The total data cache miss latency (in processor cycles) for load operations that were serviced by a remote processor.</description>
</event>

</source>

</cpu_events>
