# -*- Python -*-

Import('*')
import subprocess
import os
import SCons.Script
import time
from CXL_init import *

cxl_env = CXL_env.Clone()

env = Environment() 

PwrProfInstaller    = "CodeXLPwrProfDriver.sh"
PwrProSourceInstall = "/tmp/CodeXLPwrProfDriverSource.tar.gz"
PwrProfVersion      = "CodeXLPwrProfVersion"
baseDir     = Dir("#./Components/PowerProfiling/Backend/AMDTPowerProfilingDrivers/Linux/src").abspath
scriptDir   = Dir("#./Components/PowerProfiling/Backend/AMDTPowerProfilingDrivers/Linux").abspath

if (cxl_env['CXL_build_conf'] == 'INTERNAL' or cxl_env['CXL_build_conf'] == 'NDA'):
     cxl_env.Append(CPPDEFINES={'AMDT_INTERNAL_COUNTERS' : 1})

moduleSource = cxl_env.Install( 
	dir = cxl_env['CXL_lib_dir'], 
	source = PwrProSourceInstall)

moduleVersion = cxl_env.Install( 
	dir = cxl_env['CXL_lib_dir'], 
	source = PwrProfVersion)

moduleInstallScript = cxl_env.Install( 
	dir = cxl_env['CXL_lib_dir'], 
	source = PwrProfInstaller)

is_clean = GetOption('clean')

if not is_clean:
    cmd = "make -C %s BUILD_CONF=%s" %(baseDir, cxl_env['CXL_build_conf'])
    Execute(cmd)

    cmd = "%s/createPwrProfSourcePkg.sh %s " %(scriptDir , cxl_env['CXL_build_conf'])
    Execute(cmd)

cmd = "make clean -C %s" %baseDir
Execute(cmd)

ResultsAction = moduleSource + moduleVersion + moduleInstallScript

Return('ResultsAction')
